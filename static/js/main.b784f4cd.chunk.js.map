{"version":3,"sources":["RoutesData.js","components/Navigation.js","components/SlotChips.js","components/DateRangePicker.js","helper/constants.js","config/config.js","helper/utilities.js","services/appointmentService.js","modules/BookEvent.js","modules/ShowEvent.js","App.js","index.js"],"names":["RoutesData","label","href","useStyles","makeStyles","header","backgroundColor","paddingRight","paddingLeft","logo","fontFamily","fontWeight","color","textAlign","menuButton","size","marginLeft","toolbar","display","justifyContent","Navigation","websiteLogo","Typography","className","component","variant","AppBar","Toolbar","map","Button","key","to","RouterLink","SlotChips","props","events","time","setTime","item","index","onClick","DateRangeComponent","value","setValue","onChange","e","ranges","range1","endDate","startDate","handleSelect","Timezones","config","apiUrl","process","REACT_APP_SERVICE_URL","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","createEvent","duration","timezone","a","dateStr","timeStr","moment","format","formattedDate","momentTimezone","toISOString","durationInt","parseInt","axios","method","url","data","dateTime","event","handleResponse","response","getFreeSlots","getBookedEvent","formattedStartDate","formattedEndDate","status","err","appointmentService","container","flexDirection","divClass","marginTop","marginBottom","formClass","marginRight","boxClass","margin","BookEvent","useState","setDate","open","setOpen","setTimezone","setDuration","freeSlots","setFreeSlots","selectedTime","setSelectedTime","successAlert","setSuccessAlert","minDate","getTime","handleChange","target","handleClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","elevation","severity","Box","border","utils","DateFnsUtils","autoOk","disablePast","TextField","id","placeholder","type","Select","labelId","onOpen","MenuItem","disabled","ShowEvent","setEvents","bookedEvents","startTime","endTime","DateRangePicker","Paper","Table","TableHead","TableRow","TableCell","numeric","TableBody","scope","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b784f4cd.chunk.js","sourcesContent":["export const RoutesData = [\n  {\n    label: 'Book an Appointment',\n    href: '/',\n  },\n  {\n    label: 'View Appointment',\n    href: '/events/',\n  }\n];\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport { RoutesData } from '../RoutesData';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    backgroundColor: '#400CCC',\n    paddingRight: '79px',\n    paddingLeft: '118px',\n  },\n  logo: {\n    fontFamily: 'Work Sans, sans-serif',\n    fontWeight: 600,\n    color: '#FFFEFE',\n    textAlign: 'left',\n  },\n  menuButton: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontWeight: 700,\n    size: '18px',\n    marginLeft: '38px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  }\n}));\n\nconst Navigation = () => {\n  const {\n    header,\n    logo,\n    menuButton,\n    toolbar,\n  } = useStyles();\n\n  const websiteLogo = (\n    <Typography className={logo} component=\"h1\" variant=\"h6\">\n      Appointment Booking App\n    </Typography>\n  );\n\n  const getMenuButtons = () => RoutesData.map(({ label, href }) => (\n    <Button\n      {...{\n        key: label,\n        color: 'inherit',\n        to: href,\n        component: RouterLink,\n        className: menuButton\n      }}\n    >\n      {label}\n    </Button>\n  ));\n\n  const displayDesktop = () => (\n    <Toolbar className={toolbar}>\n      {websiteLogo}\n      <div>{getMenuButtons()}</div>\n    </Toolbar>\n  );\n\n  return (\n    <header>\n      <AppBar className={header}>{displayDesktop()}</AppBar>\n    </header>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport {\n  Button,\n} from '@material-ui/core';\n\nconst SlotChips = (props) => {\n  const { events, time, setTime } = props;\n  return (\n    <>\n      {events.map((item, index) => (\n        <Button\n          color=\"primary\"\n          onClick={() => setTime(item)}\n          variant={(time !== item) ? 'text' : 'contained'}\n        >\n          {item}\n        </Button>\n      ))}\n    </>\n  );\n}\n\nexport default SlotChips;\n","import 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport React from 'react';\nimport { DateRangePicker } from 'react-date-range';\n\nconst DateRangeComponent = (props) => {\n  const { value, setValue } = props;\n\n  const handleSelect = (ranges) => {\n    const { endDate, startDate } = ranges.range1;\n    if (startDate && endDate) {\n      setValue({ startDate, endDate });\n    }\n  }\n\n  return (\n    <DateRangePicker\n      onChange={e => handleSelect(e)}\n      ranges={[value]}\n    />\n  )\n}\nexport default DateRangeComponent;\n","export const Timezones = [\n  'America/Los_Angeles',\n  'Asia/Kolkata',\n  'Canada/Pacific',\n  'Europe/Moscow',\n  'Brazil/East'\n];\n","/* eslint-disable max-len */\nconst envVars = process.env;\nconst config = {\n  apiUrl: envVars.REACT_APP_SERVICE_URL || 'https://appointment-svc.herokuapp.com/api/',\n};\nexport default config;\n","export const formatDate = (date) => {\n  const d = new Date(date);\n  let month = `${d.getMonth() + 1}`;\n  let day = `${d.getDate()}`;\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n\n  return [year, month, day].join('-');\n}\n","import axios from 'axios';\nimport * as moment from 'moment';\nimport * as momentTimezone from 'moment-timezone';\n\nimport config from '../config/config';\nimport { formatDate } from '../helper/utilities';\n\nconst createEvent = async (date, time, duration, timezone) => {\n  try {\n    const dateStr = formatDate(date);\n    const timeStr = moment(time, 'hh:mm A').format('HH:mm');\n    const formattedDate = momentTimezone.tz(`${dateStr} ${timeStr}`, timezone).toISOString();\n    const durationInt = parseInt(duration, 10);\n    const data = await axios({\n      method: 'post',\n      url: `${config.apiUrl}events/`,\n      data: {\n        dateTime: formattedDate,\n        duration: durationInt\n      }\n    });\n    const event = handleResponse(data);\n    return event;\n  } catch (error) {\n    throw handleResponse(error.response);\n  }\n}\n\nconst getFreeSlots = async (date, timezone) => {\n  try {\n    const formattedDate = formatDate(date);\n    const data = await axios({\n      method: 'get',\n      url: `${config.apiUrl}events/?date=${formattedDate}&timezone=${timezone}`,\n      data: {}\n    });\n    const event = handleResponse(data);\n    return event;\n  } catch (error) {\n    throw handleResponse(error.response);\n  }\n}\n\nconst getBookedEvent = async (startDate, endDate) => {\n  try {\n    const formattedStartDate = formatDate(startDate);\n    const formattedEndDate = formatDate(endDate);\n    const data = await axios({\n      method: 'post',\n      url: `${config.apiUrl}events/booked/`,\n      data: {\n        startDate: formattedStartDate,\n        endDate: formattedEndDate\n      }\n    });\n    const event = handleResponse(data);\n    return event;\n  } catch (error) {\n    throw handleResponse(error.response);\n  }\n}\n\nconst handleResponse = (response) => {\n  try {\n    const { data: { data }, status: apiStatus } = response;\n    if (!apiStatus === 200) {\n      throw data;\n    }\n    return data;\n  } catch (err) {\n    throw err;\n  }\n}\n\n\nconst appointmentService = {\n  createEvent,\n  getFreeSlots,\n  getBookedEvent,\n};\n\nexport default appointmentService;\n","import React, { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  Typography,\n  MenuItem,\n  Select,\n  Box,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport { Timezones } from '../helper/constants';\nimport { appointmentService } from '../services';\nimport { SlotsChips } from '../components';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    fontFamily: 'Work Sans, sans-serif',\n    fontWeight: 600,\n    color: 'black',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  menuButton: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontWeight: 700,\n    size: '18px',\n    marginLeft: '38px',\n  },\n  divClass: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '50px',\n    marginBottom: '50px'\n  },\n  formClass: {\n    textAlign: 'center',\n    marginLeft: '350px',\n    marginRight: '350px',\n  },\n  logo: {\n    fontFamily: 'Work Sans, sans-serif',\n    color: 'black',\n    textAlign: 'left',\n  },\n  boxClass: {\n    margin: '150px',\n  }\n}));\n\nconst BookEvent = () => {\n  const {\n    container, formClass, logo, divClass, boxClass,\n  } = useStyles();\n  const [date, setDate] = useState(new Date());\n  const [open, setOpen] = useState(false);\n  const [timezone, setTimezone] = useState(`${Timezones[0]}`);\n  const [duration, setDuration] = useState('');\n  const [freeSlots, setFreeSlots] = useState([]);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [successAlert, setSuccessAlert] = useState(false);\n\n  const minDate = new Date(new Date().getTime());\n  const handleChange = (event, key) => {\n    if (key === 'duration' && event.target.value > 0) {\n      setDuration(event.target.value);\n      setFreeSlots([]);\n      setSelectedTime(null);\n    } else if (key === 'timezone') {\n      setTimezone(event.target.value);\n      setFreeSlots([]);\n      setSelectedTime(null);\n    } else if (key === 'date') {\n      setDate(event);\n      setFreeSlots([]);\n      setSelectedTime(null);\n    }\n  };\n\n  const handleClick = async (key) => {\n    if (key === 'getFreeEvent') {\n      const events = await appointmentService.getFreeSlots(date, timezone);\n      setFreeSlots(events);\n    } else {\n      await appointmentService.createEvent(date, selectedTime, duration, timezone);\n      setSuccessAlert(true);\n      setDate(new Date());\n      setTimezone(`${Timezones[0]}`);\n      setDuration('');\n      setFreeSlots([]);\n      setSelectedTime(null);\n    }\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        autoHideDuration={6000}\n        onClose={() => setSuccessAlert(false)}\n        open={successAlert}\n      >\n        <Alert elevation={6} onClose={() => setSuccessAlert(false)} severity=\"success\" variant=\"filled\">\n          Appointment booked!\n        </Alert>\n      </Snackbar>\n      <div className={container}>\n        <Box border={1} className={boxClass}>\n          <form className={formClass}>\n            <div className={divClass}>\n              <Typography className={logo} component=\"h1\" variant=\"h6\">\n                Choose date of event:\n              </Typography>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  autoOk\n                  disablePast\n                  format=\"dd/MM/yyyy\"\n                  minDate={minDate}\n                  onChange={e => handleChange(e, 'date')}\n                  value={date}\n                  variant=\"inline\"\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n            <div className={divClass}>\n              <Typography className={logo} component=\"h1\" variant=\"h6\">\n                Duration:\n              </Typography>\n              <TextField\n                id=\"standard-basic\"\n                onChange={e => handleChange(e, 'duration')}\n                placeholder=\"in minutes\"\n                type=\"number\"\n                value={duration}\n              />\n              <Typography className={logo} component=\"h1\" variant=\"h6\">\n                Timezone:\n              </Typography>\n              <Select\n                id=\"demo-controlled-open-select\"\n                labelId=\"demo-controlled-open-select-label\"\n                onChange={e => handleChange(e, 'timezone')}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                open={open}\n                value={timezone}\n              >\n                {Timezones.map(item => (<MenuItem value={item}>{item}</MenuItem>))}\n              </Select>\n            </div>\n            <SlotsChips events={freeSlots} setTime={setSelectedTime} time={selectedTime} />\n            <div className={divClass}>\n              <Button\n                color=\"primary\"\n                onClick={() => handleClick('getFreeEvent')}\n                variant=\"contained\"\n              >\n                Get Free Time\n              </Button>\n              <Button\n                color=\"primary\"\n                disabled={!(duration && selectedTime)}\n                onClick={() => handleClick('createEvent')}\n                variant=\"contained\"\n              >\n                Book Appointment\n              </Button>\n            </div>\n          </form>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nexport default BookEvent;\n","\nimport React, { useState } from 'react';\nimport * as moment from 'moment';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  makeStyles,\n  Box,\n  Typography\n} from '@material-ui/core';\n\nimport { DateRangePicker } from '../components';\nimport { appointmentService } from '../services';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    fontFamily: 'Work Sans, sans-serif',\n    fontWeight: 600,\n    color: 'black',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  menuButton: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontWeight: 700,\n    size: '18px',\n    marginLeft: '38px',\n  },\n  divClass: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: '50px',\n    marginBottom: '50px'\n  },\n  formClass: {\n    textAlign: 'center',\n    marginLeft: '350px',\n    marginRight: '350px',\n  },\n  logo: {\n    fontFamily: 'Work Sans, sans-serif',\n    color: 'black',\n    textAlign: 'left',\n  },\n  boxClass: {\n    margin: '150px',\n  }\n}));\n\nconst ShowEvent = () => {\n  const {\n    container, formClass, logo, divClass, boxClass,\n  } = useStyles();\n  const [value, setValue] = useState({ startDate: new Date(), endDate: new Date() });\n  const [events, setEvents] = useState(null);\n\n  const handleClick = async () => {\n    if (value && value.startDate && value.endDate) {\n      let bookedEvents = await appointmentService.getBookedEvent(value.startDate, value.endDate);\n      bookedEvents = bookedEvents.map(({ startTime, endTime }) => ({\n        startTime: moment(startTime).format('MMMM Do YYYY, h:mm:ss a'),\n        endTime: moment(endTime).format('MMMM Do YYYY, h:mm:ss a')\n      }))\n      setEvents(bookedEvents);\n    }\n  }\n\n  return (\n    <div className={container}>\n      <Box border={1} className={boxClass}>\n        <form className={formClass}>\n          <div className={divClass}>\n            <Typography className={logo} component=\"h1\" variant=\"h4\">\n              View Appointments\n            </Typography>\n          </div>\n          <div className={divClass}>\n            <DateRangePicker setValue={setValue} value={value} />\n          </div>\n          <div className={divClass}>\n            <Button\n              color=\"primary\"\n              onClick={() => handleClick('getFreeEvent')}\n              variant=\"contained\"\n            >\n              Get Booked Events\n            </Button>\n          </div>\n          <div className={divClass}>\n            <Paper className=\"container\">\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Serial No.</TableCell>\n                    <TableCell numeric>Start Time</TableCell>\n                    <TableCell numeric>End Time</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {(events && events.length) ? events.map(({\n                    startTime, endTime\n                  }, index) => (\n                    <TableRow key={`${index + 1}`}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {`${index + 1}`}\n                      </TableCell>\n                      <TableCell numeric>{startTime}</TableCell>\n                      <TableCell numeric>{endTime}</TableCell>\n                    </TableRow>\n                  )) : 'No records found'}\n                </TableBody>\n              </Table>\n            </Paper>\n          </div>\n        </form>\n      </Box>\n    </div>\n  )\n}\n\nexport default ShowEvent;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Navigation } from './components';\nimport { BookEvent, ShowEvent } from './modules';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route component={() => <BookEvent />} exact path=\"/\" />\n          <Route component={() => <ShowEvent />} exact path=\"/events\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}